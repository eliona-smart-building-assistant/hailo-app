/*
 * Hailo app API
 *
 * API to access and configure the Hailo app
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package apiserver

// AssetMapping - The `AssetMapping` maps each pair of Eliona project id and Hailo smart device to an Eliona asset. For different Eliona projects different assets are used (see `proj_ids` in `Configuration`). The mapping is created automatically by the app and should used read only.
type AssetMapping struct {

	// References the configured endpoint (see `Configuration`)
	ConfigId int32 `json:"configId,omitempty"`

	// References to the Hailo smart device (internal id from Hailo FDS for this device)
	DeviceId string `json:"deviceId,omitempty"`

	// The project id for which the Eliona asset is created (see `proj_ids` in `Configuration`)
	ProjId string `json:"projId,omitempty"`

	// References the asset id in Eliona which is automatically created by the app
	AssetId int32 `json:"assetId,omitempty"`
}

// AssertAssetMappingRequired checks if the required fields are not zero-ed
func AssertAssetMappingRequired(obj AssetMapping) error {
	return nil
}

// AssertRecurseAssetMappingRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of AssetMapping (e.g. [][]AssetMapping), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseAssetMappingRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aAssetMapping, ok := obj.(AssetMapping)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertAssetMappingRequired(aAssetMapping)
	})
}
